[{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://dominiquemaucieri.github.io/quadcleanR/articles/cleaning_cropping.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Cleaning and Cropping Quadrat Data","text":"vignette walk cleaning quadrat data produce easy analyze data frames. little data: data cleaned softcoral_SQuads vignette build cropping vignette well. Data collected Baum Lab Kiritimati Field Teams uncleaned version data found Maucieri Baum 2021. Biological Conservation. softcoral_SQuads data photo quadrats (0.9m 0.6m) randomly annotated 54 random points , softcoral_annotations data photo quadrats (1m 1m) randomly annotated 100 random points . annotated points, substrate identified. Photo quadrats collected Kiritimati Island Republic Kiribati document coral cover time space. annotations output data frame produced using CoralNet annotations done manually, trained researchers. vignette follow following steps: Take small quadrats (softcoral_SQuads) show clean data crop large quadrat data (softcoral_annotations) clean Join two together produce large, easy use data frame future analyses, cleaning joint data set. First lets load package, dplyr package, tidyr package data, plus extras used create vignette. Now let point unique aspects data: data Image.ID column arbitrarily added data set, going remove holds scientific value. also final row sums quadrats since removing quadrats points clean data , remove final row well. Image.name column unique ID photo quadrat, messy easy use, make new columns add information. Annotation.status column CoralNet tells annotations photo quadrat confirmed human researchers based AI. Points column tells us many randomly annotated points quadrat, since 54, know data smaller quadrats. rest columns different coral substrate IDs many points annotated tag photo. first, lets remove unneeded columns make sure working “Confirmed” annotations. Now separate Image.name column descriptive columns. notice, still .jpg .jpeg quadrat names, lets remove , change naming siteT19 site40. Now lets look levels columns. Sometimes may want every year every site data, may want subset . example don’t want subset , demonstrate subset based values later, get large quadrats. Now prep addition large quadrats, want update column names data frame. column names currently set tag shorthand used annotation process, now want better reflect actual substrate names. label set document looks like, also make R joining series vectors. Now lets fix column names. Much better. Now smaller quadrats fewer annotated points, add large quadrat data, lets deal substrate able accurately identified. photo quadrats, Shadow, Transect_hardware Unclear tags need removed used calculate percent cover. going use data diversity analysis hard corals, also include unknown_hard_coral, Bleached_unknown_hard_coral list, data used soft coral analyses, leave . identifying many usable points quadrat, removing quadrats 10% identified points unusable, removed 0 quadrats analysis, view SQuad_removed data frame quadrats removed, empty data frame. Now can start working large quadrat data. cropping data outlined cropping vignette, check details, crop , want remove unconfirmed quadrats just small quads. crop annotations data. Now just format look like small quad data can join two. large quadrats, 4 photos needed removed many unusable points. Alright, now can join data frames together, continue one large data set. data sets used label set names, easy smartbind() function gtools package Now lets continue cleaning data. things need removed including MPQs (Mega photo quadrats), site8.5 DEEP photo quadrats. Now removed unusable annotations, lets rescale recalculate cover proportion cover. data frame now nicely formatted used many community based analyses. might great stopping point analyses, clean going convert long format data. One thing may notice looking Tag_Name column, species names unique species, duplicates species, categorized bleaching non bleaching forms. kind diversity analysis, inflate number different species, important combine different forms species diversity analyses done. clean , walk 3 ways dealing based want accomplish. Option . Categorizing rows. want use data long format, want just categorize everything use various categories based different research questions, just add bunch category columns like : categorizes Tag_Name whether bleaching nonbleaching tag. also add information , like taxonomy. Option B. Categorizing rows combining. Now categorize rows, perhaps want cover values summed different level, like taxonomy level. , summarise() function dplyr work great. Option C. Wide format summing columns wanted keep data wide format, sum columns based taxonomy, allow community level analyses, also use sum_cols() function. , first need vector change names , can done simple match, unless vector new names already right order. Whichever options choose, able customize data analysis needs. data nearly cleaned. things may want add environmental data, taxonomic data. add_data() function can help adding multiple columns data set time. final things add data get shape analysis final categorization study years based timing 2015/2016 El Niño, subset species soft coral, refactor levels variables.","code":"library(quadcleanR) library(dplyr) library(tidyr) library(gtools) library(shiny) library(knitr) library(kableExtra)   data(\"softcoral_SQuads\") tail(softcoral_SQuads) SQuad_confirmed <- softcoral_SQuads %>% filter(Annotation.status == \"Confirmed\") %>% select(-c(Image.ID, Points, Annotation.status)) SQuad_separated <- separate(SQuad_confirmed, Image.name, sep=\"_\", into=c(\"Field.Season\", \"Site\",\"Quadrat\")) ## Warning: Expected 3 pieces. Additional pieces discarded in 3 rows [275, 446, ## 477]. SQuad_nojpg <- rm_chr(SQuad_separated, c(\".jpg\", \".jpeg\")) SQuad_site40 <- change_values(SQuad_nojpg, \"Site\", \"siteT19\", \"site40\") unique(SQuad_site40$Field.Season) ## [1] \"KI2007\" \"KI2009\" \"KI2010\" \"KI2011\" unique(SQuad_site40$Site) ##  [1] \"site10\" \"site11\" \"site12\" \"site13\" \"site14\" \"site15\" \"site16\" \"site17\" ##  [9] \"site18\" \"site19\" \"site1\"  \"site20\" \"site21\" \"site22\" \"site23\" \"site24\" ## [17] \"site25\" \"site26\" \"site27\" \"site28\" \"site29\" \"site2\"  \"site30\" \"site31\" ## [25] \"site32\" \"site33\" \"site34\" \"site35\" \"site36\" \"site37\" \"site3\"  \"site4\"  ## [33] \"site5\"  \"site6\"  \"site7\"  \"site8\"  \"site9\"  \"site38\" \"site39\" \"site40\" data(\"coral_labelset\") head(coral_labelset) SQuad_colnames <- change_names(SQuad_site40, coral_labelset, \"short_name\", \"full_name\") names(SQuad_colnames)[1:16] ##  [1] \"Field.Season\"                  \"Site\"                          ##  [3] \"Quadrat\"                       \"Acropora_corymbose\"            ##  [5] \"Acropora_digitate\"             \"Acropora_arborescent\"          ##  [7] \"Acropora\"                      \"Acropora_tabulate\"             ##  [9] \"Astreopora\"                    \"Bleached_Acropora_arborescent\" ## [11] \"Bleached_Acropora\"             \"Bleached_Astreopora\"           ## [13] \"Bleached_Acropora_tabulate\"    \"Bleached_Coscinarea\"           ## [15] \"Bleached_Echinophyllia\"        \"Bleached_Favites_halicora\" SQuad_colnames <-  mutate_at(SQuad_colnames, c(4:134), as.numeric)  SQuad_usable <- usable_obs(SQuad_colnames, c(\"Shadow\", \"Transect_hardware\", \"Unclear\"),                              max = TRUE, cutoff = 10)  SQuad_removed <- usable_obs(SQuad_colnames, c(\"Shadow\", \"Transect_hardware\", \"Unclear\"),                              max = TRUE, cutoff = 10, print_max = TRUE) data(\"softcoral_annotations\") data(\"softcoral_LQuads\") LQuad_confirmed <- softcoral_LQuads %>% filter(Annotation.status == \"Confirmed\")   LQuad_sub <- softcoral_annotations %>% filter(Name %in% unique(LQuad_confirmed$Image.name)) LQuad_cropped <- crop_area(data = LQuad_sub, row = \"Row\",                              column = \"Column\", id = \"Name\", dim = c(0.9, 0.6),                               obs_range = c(36,64)) LQuad_wide <- LQuad_cropped %>% select(-c(obs, Row, Column)) %>% group_by(Name) %>% pivot_wider(names_from = Label, values_from = Label, values_fn = length, values_fill = 0) LQuad_wide <- as.data.frame(LQuad_wide)  LQuad_separated <- separate(LQuad_wide, Name, sep=\"_\", into=c(\"Field.Season\", \"Site\",\"Quadrat\"))  LQuad_nojpg <- rm_chr(LQuad_separated, c(\".jpg\", \".jpeg\"))  LQuad_colnames <- change_names(LQuad_nojpg, coral_labelset, \"short_name\", \"full_name\")   LQuad_colnames <-  mutate_at(LQuad_colnames, c(4:11), as.numeric)  LQuad_usable <- usable_obs(LQuad_colnames, c(\"Shadow\", \"Transect_hardware\", \"Unclear\"),                              max = TRUE, cutoff = 0.1*54)  LQuad_removed <- usable_obs(LQuad_colnames, c(\"Shadow\", \"Transect_hardware\", \"Unclear\"),                              max = TRUE, cutoff = 0.1*54, print_max = TRUE) AllQuads <- smartbind(SQuad_usable, LQuad_usable, fill = 0) %>% select(-c(unusable)) AllQuad_noDEEP_site8.5 <- keep_rm(AllQuads, c(\"DEEP\", \"site8.5\"), select = \"row\", exact = FALSE, colname = \"Site\", keep = FALSE)  AllQuad_noMPQ <- keep_rm(AllQuad_noDEEP_site8.5, c(\"MPQ\"), select = \"row\", exact = FALSE, colname = \"Quadrat\", keep = FALSE) AllQuad_cover <- cover_calc(AllQuad_noMPQ, names(AllQuad_noMPQ[,4:131]), prop = TRUE) AllQuad_long <- AllQuad_cover %>% pivot_longer(cols = names(AllQuad_cover[,4:131]), names_to = \"Tag_Name\", values_to = \"prop_cover\") A_AllQuad_Bleach <- categorize(AllQuad_long, \"Tag_Name\", values = c(\"Bleach\"), name = \"Bleached\", binary = TRUE, exact = FALSE) A_AllQuad_Taxa <- categorize(A_AllQuad_Bleach, \"Tag_Name\", values = coral_labelset$full_name, name = \"Taxonomic_Name\", binary = FALSE, categories = coral_labelset$taxonomic_name) B_AllQuad_taxonomy <- A_AllQuad_Taxa %>% group_by(Field.Season, Site, Quadrat, Taxonomic_Name) %>% summarise(prop_cover = sum(prop_cover)) ## `summarise()` has grouped output by 'Field.Season', 'Site', 'Quadrat'. You can ## override using the `.groups` argument. current_names <- colnames(AllQuad_cover[,4:131]) new_names <- coral_labelset[match(current_names, coral_labelset$full_name),]$taxonomic_name  AllQuad_wide_summed <- sum_cols(AllQuad_cover, from = current_names, to = new_names) B_AllQuad_LH_FG <- add_data(B_AllQuad_taxonomy, coral_labelset, cols = c(\"functional_group\", \"life_history\"), data_id = \"Taxonomic_Name\", add_id = \"taxonomic_name\", number = 5)  data(\"environmental_data\")  B_AllQuad_enviro <- add_data(B_AllQuad_LH_FG, environmental_data, cols = c(\"HD_Cat\", \"HD_Cont\", \"NPP\",  \"WE\", \"Region\", \"WaveEnergy\"), data_id = \"Site\", add_id = \"Site\", number = 4) B_AllQuad_timeblock <- categorize(B_AllQuad_enviro, column = \"Field.Season\", values = unique(B_AllQuad_enviro$Field.Season), name = \"TimeBlock\", binary = FALSE, exact = TRUE, categories = c(rep(\"Before\", times = 8), rep(\"During\", times = 3), rep(\"After\", times = 4)))  AllQuads_cropclean <- keep_rm(B_AllQuad_timeblock, values = \"Soft_coral\", select = \"row\", colname = \"functional_group\")  AllQuads_cropclean$TimeBlock <- factor(AllQuads_cropclean$TimeBlock, levels = c(\"Before\", \"During\", \"After\")) AllQuads_cropclean$Site <- factor(AllQuads_cropclean$Site, levels = paste(\"site\", seq(1:40), sep = \"\")) AllQuads_cropclean$HD_Cat <- factor(AllQuads_cropclean$HD_Cat, levels = c(\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\"))"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/articles/cleaning_cropping.html","id":"exploration","dir":"Articles","previous_headings":"","what":"Exploration","title":"Cleaning and Cropping Quadrat Data","text":"data now sufficiently cleaned can used many different analyses. Often data cleaned, first step start exploring data. One thing can look sample sizes, see many quadrats different sites years. Visualizing data can easy built shiny app function. see example shiny app can go visualize data cleaned , can run following code:","code":"sample_size(AllQuads_cropclean, dim_1 = \"Site\", dim_2 = \"Field.Season\", count = \"Quadrat\") visualize_app(data = AllQuads_cropclean, xaxis = colnames(AllQuads_cropclean[,1:13]), yaxis = \"prop_cover\")"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/articles/cleaning_simple.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Simple Cleaning Quadrat Data","text":"vignette walk cleaning quadrat data produce easy analyze data frame. little data: data cleaned softcoral_LQuads vignette build cropping vignette well. Data collected Baum Lab Kiritimati Field Teams. softcoral_LQuads data photo quadrats (1m 1m) randomly annotated 100 random points . annotated points, substrate identified. Photo quadrats collected Kiritimati Island Republic Kiribati document coral cover time space. annotations output data frame produced using CoralNet annotations done manually, trained researchers.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/articles/cleaning_simple.html","id":"cleaning-the-data","dir":"Articles","previous_headings":"","what":"Cleaning the Data","title":"Simple Cleaning Quadrat Data","text":"First lets load package, dplyr package, tidyr package data, plus extras used create vignette. Now let point unique aspects data: data Image.ID column arbitrarily added data set, going remove holds scientific value. also final row sums quadrats since removing quadrats points clean data , remove final row well. Image.name column unique ID photo quadrat, messy easy use, make new columns add information. Annotation.status column CoralNet tells annotations photo quadrat confirmed human researchers based AI. Points column tells us many randomly annotated points quadrat, since 54, know data smaller quadrats. rest columns different coral substrate IDs many points annotated tag photo. first, lets remove unneeded columns make sure working “Confirmed” annotations. Now separate Image.name column descriptive columns. notice, still .jpg .jpeg quadrat names, lets remove , change naming siteT19 site40. time remove site8.5, DEEP sites MPQs (mega photo quadrat) data set. Now lets look levels columns. Next lets update column names data frame. column names currently set tag shorthand used annotation process, now want better reflect actual substrate names. label set document looks like, also make R joining series vectors. Now lets fix column names. Much better. Now photo quadrats, Shadow, Transect_hardware Unclear tags need removed used calculate percent cover. going use data diversity analysis hard corals, also include unknown_hard_coral, Bleached_unknown_hard_coral list, going clean data soft coral analyses, leave . identifying many usable points quadrat, removing quadrats 10% identified points unusable, removed 0 quadrats analysis, view LQuad_removed data frame quadrats removed, empty data frame. Now know many usable annotations tag photo quadrat. Lets convert proportion cover now. may take minute many rows. data frame now nicely formatted used many community based analyses. might great stopping point analyses, clean going convert long format data. One thing may notice looking Tag_Name column, species names unique species, duplicates species, categorized bleaching non bleaching forms. kind diversity analysis, inflate number different species, important combine different forms species diversity analyses done. clean , walk 3 ways dealing based want accomplish. Option . Categorizing rows. want use data long format, want just categorize everything use various categories based different research questions, just add bunch category columns like : categorizes Tag_Name whether bleaching nonbleaching tag. also add information , like taxonomy. Option B. Categorizing rows combining. Now categorize rows, perhaps want cover values summed different level, like taxonomy level. , summarise() function dplyr work great. Option C. Wide format summing columns wanted keep data wide format, sum columns based taxonomy, allow community level analyses, also use sum_cols() function. , first need vector change names , can done simple match, unless vector new names already right order. Whichever options choose, able customize data analysis needs. data nearly cleaned. things may want add environmental data, taxonomic data. add_data() function can help adding multiple columns data set time. final things add data get shape analysis final categorization study years based timing 2015/2016 El Niño subset species soft coral.","code":"library(quadcleanR) library(dplyr) library(tidyr) library(gtools) library(shiny) library(knitr) library(kableExtra)  data(\"softcoral_LQuads\") tail(softcoral_LQuads) LQuad_confirmed <- softcoral_LQuads %>% filter(Annotation.status == \"Confirmed\") %>% select(-c(Image.ID, Points, Annotation.status)) LQuad_separated <- separate(LQuad_confirmed, Image.name, sep=\"_\", into=c(\"Field.Season\", \"Site\",\"Quadrat\")) LQuad_nojpg <- rm_chr(LQuad_separated, c(\".jpg\", \".jpeg\"))  LQuad_site40 <- change_values(LQuad_nojpg, \"Site\", \"siteT19\", \"site40\")  LQuad_noDEEP_site8.5 <- keep_rm(LQuad_site40, c(\"DEEP\", \"site8.5\"), select = \"row\", exact = FALSE, colname = \"Site\", keep = FALSE)  LQuad_noMPQ <- keep_rm(LQuad_noDEEP_site8.5, c(\"MPQ\"), select = \"row\", exact = FALSE, colname = \"Quadrat\", keep = FALSE) unique(LQuad_noMPQ$Field.Season) ##  [1] \"KI2013\"  \"KI2014\"  \"KI2015a\" \"KI2015b\" \"KI2015c\" \"KI2015d\" \"KI2016a\" ##  [8] \"KI2016b\" \"KI2017\"  \"KI2018\"  \"KI2019\" unique(LQuad_noMPQ$Site) ##  [1] \"site14\" \"site15\" \"site19\" \"site1\"  \"site20\" \"site22\" \"site23\" \"site24\" ##  [9] \"site25\" \"site26\" \"site27\" \"site30\" \"site32\" \"site34\" \"site35\" \"site3\"  ## [17] \"site6\"  \"site8\"  \"site9\"  \"site38\" \"site5\"  \"site10\" \"site12\" \"site33\" ## [25] \"site37\" \"site40\" \"site13\" \"site18\" \"site31\" \"site36\" \"site7\" data(\"coral_labelset\") head(coral_labelset) LQuad_colnames <- change_names(LQuad_noMPQ, coral_labelset, \"short_name\", \"full_name\") names(LQuad_colnames)[1:16] ##  [1] \"Field.Season\"                  \"Site\"                          ##  [3] \"Quadrat\"                       \"Acropora_corymbose\"            ##  [5] \"Acropora_digitate\"             \"Acropora_arborescent\"          ##  [7] \"Acropora\"                      \"Acropora_tabulate\"             ##  [9] \"Astreopora\"                    \"Bleached_Acropora_arborescent\" ## [11] \"Bleached_Acropora\"             \"Bleached_Astreopora\"           ## [13] \"Bleached_Acropora_tabulate\"    \"Bleached_Coscinarea\"           ## [15] \"Bleached_Echinophyllia\"        \"Bleached_Favites_halicora\" LQuad_colnames <-  mutate_at(LQuad_colnames, c(4:134), as.numeric)  LQuad_usable <- usable_obs(LQuad_colnames, c(\"Shadow\", \"Transect_hardware\", \"Unclear\"),                              max = TRUE, cutoff = 10)  LQuad_removed <- usable_obs(LQuad_colnames, c(\"Shadow\", \"Transect_hardware\", \"Unclear\"),                              max = TRUE, cutoff = 10, print_max = TRUE) LQuad_cover <- cover_calc(LQuad_usable, names(LQuad_usable[,4:131]), prop = TRUE) LQuad_long <- LQuad_cover %>% select(-c(unusable)) %>% pivot_longer(cols = names(LQuad_cover[,4:131]), names_to = \"Tag_Name\", values_to = \"prop_cover\") A_LQuad_Bleach <- categorize(LQuad_long, \"Tag_Name\", values = c(\"Bleach\"), name = \"Bleached\", binary = TRUE, exact = FALSE) A_LQuad_Taxa <- categorize(A_LQuad_Bleach, \"Tag_Name\", values = coral_labelset$full_name, name = \"Taxonomic_Name\", binary = FALSE, categories = coral_labelset$taxonomic_name) B_LQuad_taxonomy <- A_LQuad_Taxa %>% group_by(Field.Season, Site, Quadrat, Taxonomic_Name) %>% summarise(prop_cover = sum(prop_cover)) ## `summarise()` has grouped output by 'Field.Season', 'Site', 'Quadrat'. You can ## override using the `.groups` argument. current_names <- colnames(LQuad_cover[,4:131]) new_names <- coral_labelset[match(current_names, coral_labelset$full_name),]$taxonomic_name  LQuad_wide_summed <- sum_cols(LQuad_cover, from = current_names, to = new_names) B_LQuad_LH_FG <- add_data(B_LQuad_taxonomy, coral_labelset, cols = c(\"functional_group\", \"life_history\"), data_id = \"Taxonomic_Name\", add_id = \"taxonomic_name\", number = 5)  data(\"environmental_data\")  B_LQuad_enviro <- add_data(B_LQuad_LH_FG, environmental_data, cols = c(\"HD_Cat\", \"HD_Cont\", \"NPP\",  \"WE\", \"Region\", \"WaveEnergy\"), data_id = \"Site\", add_id = \"Site\", number = 4) B_LQuad_timeblock <- categorize(B_LQuad_enviro, column = \"Field.Season\", values = unique(B_LQuad_enviro$Field.Season), name = \"TimeBlock\", binary = FALSE, exact = TRUE, categories = c(rep(\"Before\", times = 4), rep(\"During\", times = 3), rep(\"After\", times = 4)))  simple_cleaned <- keep_rm(B_LQuad_timeblock, values = \"Soft_coral\", select = \"row\", colname = \"functional_group\")"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/articles/cleaning_simple.html","id":"exploration","dir":"Articles","previous_headings":"","what":"Exploration","title":"Simple Cleaning Quadrat Data","text":"data now sufficiently cleaned can used many different analyses. Often data cleaned, first step start exploring data. One thing can look sample sizes, see many quadrats different sites years. Visualizing data can easy built shiny app function. see example shiny app can go following code. data used example data set just cleaned. However help data. can use following code produce shiny app data, can explore data.","code":"sample_size(simple_cleaned, dim_1 = \"Site\", dim_2 = \"Field.Season\", count = \"Quadrat\") runGitHub(\"quadcleanR\", username = \"DominiqueMaucieri\", subdir = \"inst/shiny/example\", ref = \"main\") visualize_app(data = simple_cleaned, xaxis = colnames(simple_cleaned[,1:13]), yaxis = \"prop_cover\")"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/articles/cropping.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Why to Crop Quadrats by Area","text":"function crop_area() powerful working quadrats different sizes density points. vignette walk might want crop quadrats based area go using crop_area() function. working quadrats, area sampled density points sampled affect diversity measures conducted. sampling larger area, differing shaped area, amount heterogeneity number possible species can differ. Simply averaging cover individuals proportional abundance influenced size quadrat, introducing sources error variation samples Anderson Marcus 1993. identification substrate organisms already occurred quadrats different sizes, vignette can demonstrate subset, ‘crop’ area quadrats size maintaining similar effort comparability samples. sampling effort needs roughly per unit area, cropped areas sampling effort. uniform grids area used identify organism substrate underneath, cropping smaller area exactly effort number points cropped area. Ex splitting quadrat 10cm 10cm squares identifying substrate organism vertexes squares. random points used used identify organism substrate underneath, density points need per unit area, average, cropped areas contain number points. Ex randomly identifying 100 points 1m 1m quadrat randomly identifying 54 points 0.9m 0.6m quadrat, average density 1 point every cm2 quadrat area. full area quadrat identified, effort applied area, though method cropping value. Additionally, method beneficial still ensures spatial relationships organisms within quadrat. subset points randomly selected, like 54 100 identified points, points still cover whole quadrat therefore still representative larger sampling effort, 54 points 100, aggregated bottom left corner quadrat. method vignette explore, random uniform grid points displayed. First, packages need loaded, quadcleanR package ggplot2 help visualize data results.","code":"library(quadcleanR) library(ggplot2)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/articles/cropping.html","id":"randomized-data","dir":"Articles","previous_headings":"","what":"Randomized Data","title":"Why to Crop Quadrats by Area","text":"First start randomizing data help illustrate going . example randomize 4 quadrats data. quadrats 100 identifications within , random row column location. set quadrat size within 2000x2000 pixel quadrat, randomly identify identification one 4 soft coral genera: Cladiella, Sinularia, Sarcophyton Lobophytum.  plots show identification randomly placed within quadrats. Now crop area 50% original length width. two ways , first, know haw large quadrat , can specify exact size, estimate based maximum row column locations. First examine just estimating size:  plots show cropped coral points red full uncropped quadrats red, showing cropped points grouped bottom corner, maintaining spatial relationships. Now cropping, specifying dimensions quadrat  specifying dimensions dimensions quadrat, cropping accurate estimated, though can see, dimension unknown, may occur using photoquadrats pixel locations, estimated method still accurate.","code":"#Creating a vector of the soft coral genera tags <- c(\"Cladiella\", \"Sinularia\", \"Sarcophyton\", \"Lobophytum\")  #Creating a vector of quadrat names rep <- c(rep(\"Q1\", times = 100),           rep(\"Q2\", times = 100),           rep(\"Q3\", times = 100),           rep(\"Q4\", times = 100))  #Creating a vector of randomized row locations row <- c(sample(x = c(0:2000), size = 100, replace = TRUE),          sample(x = c(0:2000), size = 100, replace = TRUE),          sample(x = c(0:2000), size = 100, replace = TRUE),          sample(x = c(0:2000), size = 100, replace = TRUE))  #Creating a vector of randomized column locations column <- c(sample(x = c(0:2000), size = 100, replace = TRUE),             sample(x = c(0:2000), size = 100, replace = TRUE),             sample(x = c(0:2000), size = 100, replace = TRUE),             sample(x = c(0:2000), size = 100, replace = TRUE))  #Creating a vector of randomized identification labels label <- c(sample(x = tags, size = 100, replace = TRUE),            sample(x = tags, size = 100, replace = TRUE),            sample(x = tags, size = 100, replace = TRUE),            sample(x = tags, size = 100, replace = TRUE))  #Joining vectors into a data frame coral_annotations <- data.frame(rep, row, column, label)  #Plotting each quadrat ggplot(coral_annotations[1:100,], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 1\")  ggplot(coral_annotations[101:200,], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 2\")  ggplot(coral_annotations[201:300,], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 3\")  ggplot(coral_annotations[301:400,], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 4\") crop_area_coral_1 <- crop_area(data = coral_annotations, row = \"row\",                              column = \"column\", id = \"rep\", dim = c(0.5, 0.5))    #Plotting each quadrat ggplot(coral_annotations[1:100, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 1\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * max(column),       ymin = 0,       ymax =  0.5 * max(row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral_1, rep == \"Q1\"),              color = \"red\")  ggplot(coral_annotations[101:200, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 2\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * max(column),       ymin = 0,       ymax =  0.5 * max(row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral_1, rep == \"Q2\"),              color = \"red\")  ggplot(coral_annotations[201:300, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 3\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * max(column),       ymin = 0,       ymax =  0.5 * max(row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral_1, rep == \"Q3\"),              color = \"red\")  ggplot(coral_annotations[301:400, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 4\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * max(column),       ymin = 0,       ymax =  0.5 * max(row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral_1, rep == \"Q4\"),              color = \"red\") coral_annotations[[\"col_dim\"]] <- 2000 coral_annotations[[\"row_dim\"]] <- 2000  crop_area_coral_2 <- crop_area(data = coral_annotations, row = \"row\",                                column = \"column\", id = \"rep\", dim = c(0.5, 0.5),                                res = TRUE, res_dim_x = \"col_dim\", res_dim_y = \"row_dim\")    #Plotting each quadrat ggplot(coral_annotations[1:100, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 1\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * 2000,       ymin = 0,       ymax =  0.5 * 2000     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral_2, rep == \"Q1\"),              color = \"red\")  ggplot(coral_annotations[101:200, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 2\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * 2000,       ymin = 0,       ymax =  0.5 * 2000     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral_2, rep == \"Q2\"),              color = \"red\")  ggplot(coral_annotations[201:300, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 3\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * 2000,       ymin = 0,       ymax =  0.5 * 2000     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral_2, rep == \"Q3\"),              color = \"red\")  ggplot(coral_annotations[301:400, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 4\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * 2000,       ymin = 0,       ymax =  0.5 * 2000     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral_2, rep == \"Q4\"),              color = \"red\")"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/articles/cropping.html","id":"coral-data","dir":"Articles","previous_headings":"","what":"Coral Data","title":"Why to Crop Quadrats by Area","text":"Now real example. data published Maucieri Baum 2021 archived GitHub repository paper. study, quadrat sizes switched 2013. Prior 2013, 0.9cm 0.6cm changed 1m 1m. However, quadrats randomly annotated, using 54 100 points respectively, quadrat density 1point/cm2. method cropping quadrats developed deal different sized quadrats make 0.9cm 0.6cm 54cm2. First lets load data. quite quadrats, visualize first 4 previous example  Now may notice, axes differ photos. quadrat photos cropped uploading CoralNet allowed easy randomized annotations. Due , number pixels photo quadrat differ, mostly unknown. ability estimate length width pixels within crop_area() function. example, also specifying obs_range 36:64, quadrats high low numbers points within subsetted area included. Now crop 1m 1m quadrats 0.9m 0.6m:  ’s , now quadrats cropped 0.9m 0.6m quadrats, plus quadrats randomly high low number points removed.","code":"data(softcoral_annotations) ex_1 <- subset(softcoral_annotations, Name == unique(softcoral_annotations$Name)[1]) ex_2 <- subset(softcoral_annotations, Name == unique(softcoral_annotations$Name)[2]) ex_3 <- subset(softcoral_annotations, Name == unique(softcoral_annotations$Name)[3]) ex_4 <- subset(softcoral_annotations, Name == unique(softcoral_annotations$Name)[4])  #Plotting each quadrat ggplot(ex_1, aes(x = Column, y = Row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"KI2013_site14_Q10\")  ggplot(ex_2, aes(x = Column, y = Row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"KI2013_site14_Q11\")   ggplot(ex_3, aes(x = Column, y = Row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"KI2013_site14_Q12\")   ggplot(ex_4, aes(x = Column, y = Row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"KI2013_site14_Q13\") crop_area_softcoral <- crop_area(data = softcoral_annotations, row = \"Row\",                              column = \"Column\", id = \"Name\", dim = c(0.9, 0.6),                               obs_range = c(36,64))  ex_1_sub <- subset(crop_area_softcoral, Name == unique(softcoral_annotations$Name)[1]) ex_2_sub <- subset(crop_area_softcoral, Name == unique(softcoral_annotations$Name)[2]) ex_3_sub <- subset(crop_area_softcoral, Name == unique(softcoral_annotations$Name)[3]) ex_4_sub <- subset(crop_area_softcoral, Name == unique(softcoral_annotations$Name)[4])   #Plotting each quadrat ggplot(ex_1, aes(x = Column, y = Row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"KI2013_site14_Q10\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.6 * max(Column),       ymin = 0,       ymax =  0.9 * max(Row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = ex_1_sub,              color = \"red\")  ggplot(ex_2, aes(x = Column, y = Row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"KI2013_site14_Q11\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.6 * max(Column),       ymin = 0,       ymax =  0.9 * max(Row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = ex_2_sub,              color = \"red\")  ggplot(ex_3, aes(x = Column, y = Row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"KI2013_site14_Q12\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.6 * max(Column),       ymin = 0,       ymax =  0.9 * max(Row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = ex_3_sub,              color = \"red\")  ggplot(ex_4, aes(x = Column, y = Row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"KI2013_site14_Q13\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.6 * max(Column),       ymin = 0,       ymax =  0.9 * max(Row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = ex_4_sub,              color = \"red\")"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/articles/cropping.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Why to Crop Quadrats by Area","text":"Anderson, S., L. F. Marcus. 1993. Effect quadrat size measurements species density. Journal Biogeography 20: 421-428. Maucieri, D.G., J.K. Baum. 2021. Impacts heat stress soft corals, overlooked highly vulnerable component coral reef ecosystems, central equatorial Pacific atoll. Biological Conservation 262: 1-10. https://doi.org/10.1016/j.biocon.2021.109328","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dominique Maucieri. Author, maintainer.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Maucieri D (2022). quadcleanR: Cleanup Visualization Quadrat Data. https://github.com/DominiqueMaucieri/quadcleanR, https://dominiquemaucieri.com/quadcleanR/.","code":"@Manual{,   title = {quadcleanR: Cleanup and Visualization of Quadrat Data},   author = {Dominique Maucieri},   year = {2022},   note = {https://github.com/DominiqueMaucieri/quadcleanR, https://dominiquemaucieri.com/quadcleanR/}, }"},{"path":[]},{"path":"https://dominiquemaucieri.github.io/quadcleanR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Cleanup and Visualization of Quadrat Data","text":"quadcleanR customizable tool clean ecological data collected quadrats. package aid cleaning, processing assessing quadrat data, well provide intuitive ways add additional information data sets. work quadrat data (similar data), package help speed cleaning data can spend time analyses.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cleanup and Visualization of Quadrat Data","text":"","code":"#currently quadcleanR is in the development phase and can only be  #downloaded from GitHub directly: install.packages(\"devtools\") devtools::install_github(\"DominiqueMaucieri/quadcleanR\")"},{"path":[]},{"path":"https://dominiquemaucieri.github.io/quadcleanR/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example Usage","title":"Cleanup and Visualization of Quadrat Data","text":"three vignettes included package walk different examples cleaning quadrat data. Simple Cleaning Quadrat Data vignette produce data visualizable example shiny app.","code":"library(quadcleanR) library(ggplot2)  #Creating a vector of the soft coral genera tags <- c(\"Cladiella\", \"Sinularia\", \"Sarcophyton\", \"Lobophytum\")  #Creating a vector of quadrat names rep <- c(rep(\"Q1\", times = 100),           rep(\"Q2\", times = 100),           rep(\"Q3\", times = 100),           rep(\"Q4\", times = 100))  #Creating a vector of randomized row locations row <- c(sample(x = c(0:2000), size = 100, replace = TRUE),          sample(x = c(0:2000), size = 100, replace = TRUE),          sample(x = c(0:2000), size = 100, replace = TRUE),          sample(x = c(0:2000), size = 100, replace = TRUE))  #Creating a vector of randomized column locations column <- c(sample(x = c(0:2000), size = 100, replace = TRUE),             sample(x = c(0:2000), size = 100, replace = TRUE),             sample(x = c(0:2000), size = 100, replace = TRUE),             sample(x = c(0:2000), size = 100, replace = TRUE))  #Creating a vector of randomized identification labels label <- c(sample(x = tags, size = 100, replace = TRUE),            sample(x = tags, size = 100, replace = TRUE),            sample(x = tags, size = 100, replace = TRUE),            sample(x = tags, size = 100, replace = TRUE))  #Joining vectors into a data frame coral_annotations <- data.frame(rep, row, column, label)  crop_area_coral <- crop_area(data = coral_annotations, row = \"row\",                              column = \"column\", id = \"rep\", dim = c(0.5, 0.5))    #Plotting each quadrat ggplot(coral_annotations[1:100, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 1\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * max(column),       ymin = 0,       ymax =  0.5 * max(row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral, rep == \"Q1\"),              color = \"red\")  ggplot(coral_annotations[101:200, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 2\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * max(column),       ymin = 0,       ymax =  0.5 * max(row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral, rep == \"Q2\"),              color = \"red\")  ggplot(coral_annotations[201:300, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 3\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * max(column),       ymin = 0,       ymax =  0.5 * max(row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral, rep == \"Q3\"),              color = \"red\")  ggplot(coral_annotations[301:400, ], aes(x = column, y = row)) +   geom_point() +   theme_classic() +   labs(y = \"\", x = \"\", title = \"Quadrat 4\") +   geom_rect(     aes(       xmin = 0,       xmax = 0.5 * max(column),       ymin = 0,       ymax =  0.5 * max(row)     ),     color = \"black\",     alpha = 0   ) +   geom_point(data = subset(crop_area_coral, rep == \"Q4\"),              color = \"red\")"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Cleanup and Visualization of Quadrat Data","text":"find bug, please let know adding reproducible example GitHub. Additionally can contact inquiries dominiquemaucieri@gmail.com","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/add_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add data to existing data frame. — add_data","title":"Add data to existing data frame. — add_data","text":"Using key identifying columns, add additional columns existing data frame. function allows match new columns based specified IDs can choose columns add. Additionally can specify column number add new columns, added end data frame. Helpful adding environmental taxonomic data quadrat data.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/add_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add data to existing data frame. — add_data","text":"","code":"add_data(data, add, cols, data_id, add_id, number = FALSE)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/add_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add data to existing data frame. — add_data","text":"data data frame want add columns . add data frame columns want add data. cols column names add wish add data. data_id ID column data used match rows add. add_id ID column add used match rows data. number column number start add new columns, added end data frame. specified added end data frame default.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/add_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add data to existing data frame. — add_data","text":"data frame added columns.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/add_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add data to existing data frame. — add_data","text":"","code":"Sites <- as.factor(c(\"One\", \"One\", \"One\", \"Two\", \"Two\", \"Three\")) Transect <- as.factor(c(\"1-Deep\", \"1-Shallow\", \"2-Shallow\", \"1-Shallow\", \"1-Deep\", \"1\")) coral_name <- c(\"Acropora.sp\", \"Leptastrea.sp\", \"Sinularia.sp\", \"Psammocora.sp\", \"     Psammocora.sp\", \"Leptastrea.sp\") prop_cover <- c(0.1, 0.6, 0.4, 0.9, 0.2, 0.5) coral_cover <- data.frame(Sites, Transect, coral_name, prop_cover)  corals <- c(\"Acropora.sp\", \"Leptastrea.sp\", \"Psammocora.sp\") lifehistory <- c(\"compeditive\", \"weedy\",  \"stresstolerant\") functionalgroup <- c(\"hardcoral\", \"hardcoral\", \"hardcoral\") coral_info <- data.frame(corals, lifehistory, functionalgroup)  add_data(data = coral_cover, add = coral_info, cols = c(\"lifehistory\", \"functionalgroup\"),          data_id = \"coral_name\", add_id = \"corals\", number = 4) #>   Sites  Transect          coral_name    lifehistory functionalgroup prop_cover #> 1   One    1-Deep         Acropora.sp    compeditive       hardcoral        0.1 #> 2   One 1-Shallow       Leptastrea.sp          weedy       hardcoral        0.6 #> 3   One 2-Shallow        Sinularia.sp           <NA>            <NA>        0.4 #> 4   Two 1-Shallow       Psammocora.sp stresstolerant       hardcoral        0.9 #> 5   Two    1-Deep \\n    Psammocora.sp           <NA>            <NA>        0.2 #> 6 Three         1       Leptastrea.sp          weedy       hardcoral        0.5"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/categorize.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize data based on contents of a column — categorize","title":"Categorize data based on contents of a column — categorize","text":"Using column within data frame, categorize rows binary yes , customize set category names. Data can categorized based inclusion lack inclusion parts characters, based exact characters. Especially useful turning ID tags useful categories analysis morphology, bleaching, taxonomy etc.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/categorize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize data based on contents of a column — categorize","text":"","code":"categorize(data, column, values, name, binary = TRUE, exact = TRUE, categories)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/categorize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorize data based on contents of a column — categorize","text":"data data frame. column column name contains data categorize rows. values characters parts characters use classify rows. name name now column categories. binary binary = TRUE, name column returned \"Yes\" denoting characters ,parts characters specified values present row, \"\" denotes characters parts characters specified values present row. binary =  FALSE must categories provided used classify presence characters parts characters specified values. exact exact = TRUE exact matches selected. exact = FALSE matches selected contain characters values vector limited exact matches. categories factor names denoting presence characters parts characters specified values. must specified order corresponding element values.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/categorize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorize data based on contents of a column — categorize","text":"data frame new categorization column.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/categorize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorize data based on contents of a column — categorize","text":"","code":"Sites <- as.factor(c(\"One\", \"One\", \"One\", \"Two\", \"Two\", \"Three\")) Transect <- as.factor(c(\"1-Deep\", \"1-Shallow\", \"2-Shallow\", \"1-Shallow\", \"1-Deep\", \"1-Deep\")) Acropora.sp <- c(0.1, 0.6, 0.4, 0.9, 0.2, 0.5) Gardineroseris.sp <- c(0.4, 0.9, 0.5, 0.23, 0.5, NA) Psammocora.sp <- c(0.9, 0.6, 0.5, 0.8, 0.1, 0.4) Leptastrea.sp <- c(0.5, 0.7, 0.4, 0.8, 0.2, NA) Notes <- c(NA, NA, \"saw octopus\", NA, \"white balance corrected\", NA) coral_cover <- data.frame(Sites, Transect, Acropora.sp, Gardineroseris.sp,                           Psammocora.sp, Leptastrea.sp, Notes)  # Classify shallow transects in a binary column categorize(data = coral_cover, column = \"Transect\", values = \"Shallow\",     name = \"Shallow\", binary = TRUE, exact = FALSE) #>   Sites  Transect Shallow Acropora.sp Gardineroseris.sp Psammocora.sp #> 1   One    1-Deep      No         0.1              0.40           0.9 #> 2   One 1-Shallow     Yes         0.6              0.90           0.6 #> 3   One 2-Shallow     Yes         0.4              0.50           0.5 #> 4   Two 1-Shallow     Yes         0.9              0.23           0.8 #> 5   Two    1-Deep      No         0.2              0.50           0.1 #> 6 Three    1-Deep      No         0.5                NA           0.4 #>   Leptastrea.sp                   Notes #> 1           0.5                    <NA> #> 2           0.7                    <NA> #> 3           0.4             saw octopus #> 4           0.8                    <NA> #> 5           0.2 white balance corrected #> 6            NA                    <NA>  # Classify depth of transect in a new column based on transect name categorize(data = coral_cover, column = \"Transect\", values = c(\"Shallow\", \"Deep\"),     name = \"Depth\", binary = FALSE, categories = c(\"S\", \"D\"), exact = FALSE) #>   Sites  Transect Depth Acropora.sp Gardineroseris.sp Psammocora.sp #> 1   One    1-Deep     D         0.1              0.40           0.9 #> 2   One 1-Shallow     S         0.6              0.90           0.6 #> 3   One 2-Shallow     S         0.4              0.50           0.5 #> 4   Two 1-Shallow     S         0.9              0.23           0.8 #> 5   Two    1-Deep     D         0.2              0.50           0.1 #> 6 Three    1-Deep     D         0.5                NA           0.4 #>   Leptastrea.sp                   Notes #> 1           0.5                    <NA> #> 2           0.7                    <NA> #> 3           0.4             saw octopus #> 4           0.8                    <NA> #> 5           0.2 white balance corrected #> 6            NA                    <NA>"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Change names of columns — change_names","title":"Change names of columns — change_names","text":"Using new data frame labels, change column names one function. Helpful column names shorthands contain spaces characters supported column names R.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change names of columns — change_names","text":"","code":"change_names(data, labelset, from, to)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change names of columns — change_names","text":"data data frame want change column names . labelset data frame containing column names want change want changed . name column label set data frame containing original column names. name column label set data frame containing new column names original column names changed .","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change names of columns — change_names","text":"data frame containing new column names.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change names of columns — change_names","text":"","code":"#creating data set Sites <- c(\"One\", \"Two\", \"Three\", \"Four\", \"Five\") Acrop <- c(0.1, 0.4, 0.9, 0.2, 0.5) Gardin <- c(0.4, 0.9, 0.5, 0.23, 0.8) Psam <- c(0.9, 0.5, 0.8, 0.1, 0.4) Lepta <- c(0.5, 0.7, 0.8, 0.2, 0.9) coral_cover <- data.frame(Sites, Acrop, Gardin, Psam, Lepta)  #creating label data frame species_short <- c(\"Acrop\", \"Gardin\", \"Psam\", \"Lepta\") species_long <- c(\"Acropora\", \"Gardineroseris\", \"Psammocora\", \"Leptastrea\") coral_labels <- data.frame(species_short, species_long)  change_names(coral_cover, coral_labels, \"species_short\", \"species_long\") #>   Sites Acropora Gardineroseris Psammocora Leptastrea #> 1   One      0.1           0.40        0.9        0.5 #> 2   Two      0.4           0.90        0.5        0.7 #> 3 Three      0.9           0.50        0.8        0.8 #> 4  Four      0.2           0.23        0.1        0.2 #> 5  Five      0.5           0.80        0.4        0.9"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Change values within a column — change_values","title":"Change values within a column — change_values","text":"Using two vectors, change values one column new set values. Helpful need change many values , like updating changes site names taxonomy.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change values within a column — change_values","text":"","code":"change_values(data, column, from, to)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change values within a column — change_values","text":"data data frame. column column change values. vector containing values wish change. vector contain values change , ensuring occur order vector.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change values within a column — change_values","text":"data frame containing new values within specified column.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/change_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change values within a column — change_values","text":"","code":"Sites <- c(\"One.jpg\", \"Two.jpg\", \"Three.jpg\", \"Four.jpg\", \"Five.jpg\") Dominant_Coral <- c(\"Acropora.sp\", \"Leptastrea.spp\", \"Acropora.sp\",                     \"Acropora.sp\", \"Acropora.sp\") Dominant_Cover <- c(0.1, 0.4, 0.9, 0.2, 0.5) Largest_Coral <- c(\"Acropora.sp\", \"Acropora.sp\", \"Psammocora.sp\",                    \"Acropora.sp\",\"Gardineroseris.spp\")  coral_cover <- data.frame(Sites, Dominant_Coral, Dominant_Cover, Largest_Coral)  change_values(coral_cover, \"Dominant_Coral\",     c(\"Acropora.sp\",\"Leptastrea.spp\"), c(\"Acropora_tabulate\", \"Leptastrea.purpurea\")) #>       Sites      Dominant_Coral Dominant_Cover      Largest_Coral #> 1   One.jpg   Acropora_tabulate            0.1        Acropora.sp #> 2   Two.jpg Leptastrea.purpurea            0.4        Acropora.sp #> 3 Three.jpg   Acropora_tabulate            0.9      Psammocora.sp #> 4  Four.jpg   Acropora_tabulate            0.2        Acropora.sp #> 5  Five.jpg   Acropora_tabulate            0.5 Gardineroseris.spp"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/coral_labelset.html","id":null,"dir":"Reference","previous_headings":"","what":"Labelset for Corals — coral_labelset","title":"Labelset for Corals — coral_labelset","text":"data_frame can used Simple Cleaning Quadrat Data vignette rename columns quadrat data add functional group data, produce easy analyze data frames. short names used identify substrate using CoralNet included output CoralNet.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/coral_labelset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labelset for Corals — coral_labelset","text":"","code":"coral_labelset"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/coral_labelset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Labelset for Corals — coral_labelset","text":"data_frame 5 columns, : short_name short name ID used annotate photo quadrats. full_name long name definition short name ID. taxonomic_name taxonomic grouping name short name ID. functional_group functional group ID. life_history life history category coral ID.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/cover_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate species cover — cover_calc","title":"Calculate species cover — cover_calc","text":"Convert number observations species non-species proportion percent cover within row based total number observations row. Useful quadrats varying numbers observations calculate row's percent cover .","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/cover_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate species cover — cover_calc","text":"","code":"cover_calc(data, spp, prop = TRUE, total = FALSE)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/cover_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate species cover — cover_calc","text":"data data frame row representing sampling unit (ex. quadrat photo). spp column names containing observations used proportion calculation. important note proportions scaled total observations columns quadrat. prop prop = TRUE, resulting cover proportions. prop = FALSE, resulting cover percentages. total total = TRUE, column containing total number observations sampling unit returned new column called total_pts. returned total = FALSE.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/cover_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate species cover — cover_calc","text":"data frame containing scaled observation cover.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/cover_calc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate species cover — cover_calc","text":"","code":"#create data set for example Sites <- as.factor(c(\"One\", \"One\", \"Two\", \"Two\", \"Three\", \"Three\")) Transect <- as.factor(c(\"1-Shallow\", \"2-Shallow\", \"1-Shallow\", \"2-Shallow\",     \"1-Shallow\", \"2-Shallow\")) Acropora.sp <- c(1, 2, 3, 4, 5, 6) Gardineroseris.sp <- c(6, 1, 2, 3, 4, 5) Psammocora.sp <- c(5, 6, 1, 2, 3, 4) Leptastrea.sp <- c(4, 5, 6, 1, 2, 3) coral_cover <- data.frame(Sites, Transect, Acropora.sp, Gardineroseris.sp,                           Psammocora.sp, Leptastrea.sp)  cover_calc(data = coral_cover, spp = names(coral_cover[3:6]), prop = TRUE, total = TRUE) #>   Sites  Transect Acropora.sp Gardineroseris.sp Psammocora.sp Leptastrea.sp #> 1   One 1-Shallow   0.0625000        0.37500000    0.31250000     0.2500000 #> 2   One 2-Shallow   0.1428571        0.07142857    0.42857143     0.3571429 #> 3   Two 1-Shallow   0.2500000        0.16666667    0.08333333     0.5000000 #> 4   Two 2-Shallow   0.4000000        0.30000000    0.20000000     0.1000000 #> 5 Three 1-Shallow   0.3571429        0.28571429    0.21428571     0.1428571 #> 6 Three 2-Shallow   0.3333333        0.27777778    0.22222222     0.1666667 #>   total_pts #> 1        16 #> 2        14 #> 3        12 #> 4        10 #> 5        14 #> 6        18  cover_calc(data = coral_cover, spp = names(coral_cover[3:6]), prop = FALSE, total = FALSE) #>   Sites  Transect Acropora.sp Gardineroseris.sp Psammocora.sp Leptastrea.sp #> 1   One 1-Shallow     6.25000         37.500000     31.250000      25.00000 #> 2   One 2-Shallow    14.28571          7.142857     42.857143      35.71429 #> 3   Two 1-Shallow    25.00000         16.666667      8.333333      50.00000 #> 4   Two 2-Shallow    40.00000         30.000000     20.000000      10.00000 #> 5 Three 1-Shallow    35.71429         28.571429     21.428571      14.28571 #> 6 Three 2-Shallow    33.33333         27.777778     22.222222      16.66667"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/crop_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop quadrats based on area — crop_area","title":"Crop quadrats based on area — crop_area","text":"Using location annotated points within quadrats size quadrat, crop quadrat data smaller area, maintaining spatial relationships points. Useful making different sized quadrat data comparable.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/crop_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop quadrats based on area — crop_area","text":"","code":"crop_area(   data,   row,   column,   id,   dim,   obs_rm = FALSE,   obs_range,   res = FALSE,   res_dim_x,   res_dim_y )"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/crop_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop quadrats based on area — crop_area","text":"data data frame containing annotations, long format, observations contained one column. row column name data contains row locations annotated points. column column name data contains column location annotated points. id column name data contains quadrat ID annotated points. dim vector length 2, containing proportion row columns crop. First element proportion rows second proportion columns. obs_rm obs_rm = FALSE, quadrats removed returned data set. obs_rm = TRUE, quadrats removed returned data set based number annotated observations cropped area specified obs_range. obs_range vector length 2, specifying min max accepted number annotated observations retain data set. res res = TRUE dimensions quadrat known. must units row column locations. dimensions known, specify res = FALSE, function estimate max dimensions based max row column location annotated points. res_dim_x column name data contains max column dimension quadrat. res_dim_y column name data contains max row dimension quadrat.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/crop_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop quadrats based on area — crop_area","text":"data frame quadrat annotations subset annotated points.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/crop_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop quadrats based on area — crop_area","text":"","code":"#Creating the data file tags <- c(\"Clad\", \"Sinu\", \"Sarco\", \"Loph\")  site <- c(rep(\"Site1\", times = 100),          rep(\"Site2\", times = 100),          rep(\"Site3\", times = 100),          rep(\"Site4\", times = 100)) row <- c(sample(x = c(1:2000), size = 100, replace = TRUE),         sample(x = c(1:2000), size = 100, replace = TRUE),         sample(x = c(1:2000), size = 100, replace = TRUE),         sample(x = c(1:2000), size = 100, replace = TRUE)) column <- c(sample(x = c(1:2000), size = 100, replace = TRUE),            sample(x = c(1:2000), size = 100, replace = TRUE),            sample(x = c(1:2000), size = 100, replace = TRUE),            sample(x = c(1:2000), size = 100, replace = TRUE)) label <- c(sample(x = tags, size = 100, replace = TRUE),           sample(x = tags, size = 100, replace = TRUE),           sample(x = tags, size = 100, replace = TRUE),           sample(x = tags, size = 100, replace = TRUE)) coral_annotations <- data.frame(site, row, column, label)  crop_area_coral <- crop_area(data = coral_annotations, row = \"row\",                             column = \"column\", id = \"site\", dim = c(0.5, 0.5))  coral_annotations$col_dim <- 2000 coral_annotations$row_dim <- 2000  crop_area_coral_2 <- crop_area(data = coral_annotations, row = \"row\",                               column = \"column\", id = \"site\", dim = c(0.5, 0.5),                               res = TRUE, res_dim_x = \"col_dim\", res_dim_y = \"row_dim\")"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/environmental_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Environmental Data for Cleaning Vignettes — environmental_data","title":"Sample Environmental Data for Cleaning Vignettes — environmental_data","text":"data_frame can used Simple Cleaning Quadrat Data vignette show environmental data can easily added quadrat data. Data collected collated Baum Lab. Data originally published coral quadrat data Maucieri Baum 2021. Biological Conservation doi:10.1016/j.biocon.2021.109328 .","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/environmental_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Environmental Data for Cleaning Vignettes — environmental_data","text":"","code":"environmental_data"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/environmental_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Environmental Data for Cleaning Vignettes — environmental_data","text":"data_frame 7 columns, : Site Site number. HD_Cat Estimate local human disturbance site categorical variable. HD_Cont Estimate local human disturbance site continuous variable. NPP Max net primary productivity site (mg C m^-2 day^-1). sampling site sheltered windward side atoll. Region Region atoll. WaveEnergy Wave energy site (kW m^-1).","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/keep_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep or remove rows and columns from data frame — keep_rm","title":"Keep or remove rows and columns from data frame — keep_rm","text":"Using character, part character select rows columns data frame either keep remove. customizable way subset data can keep remove based partial matches, cells containing select characters.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/keep_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep or remove rows and columns from data frame — keep_rm","text":"","code":"keep_rm(   data,   values,   select,   keep = TRUE,   drop_levels = TRUE,   exact = TRUE,   colname )"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/keep_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep or remove rows and columns from data frame — keep_rm","text":"data data frame. values vector containing characters parts characters base selection . select select = \"row\", rows containing values selected either kept, removed, specified keep. select = \"col\", columns names containing values either kept removed, specified keep. keep keep = TRUE presence values cause selected rows columns kept. keep = FALSE presence values cause selected rows columns removed. drop_levels drop_levels = TRUE, factor levels removed dropped. applicable select = \"row\" exact exact = TRUE exact matches selected. exact = FALSE matches selected contain characters values vector limited exact matches . colname select = \"row\", colname specify column select rows .","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/keep_rm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep or remove rows and columns from data frame — keep_rm","text":"data frame containing new selection data.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/keep_rm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep or remove rows and columns from data frame — keep_rm","text":"","code":"# create data frame Sites <- as.factor(c(\"One\", \"One\", \"One\", \"Two\", \"Two\", \"Three\")) Transect <- as.factor(c(\"1-Deep\", \"1-Shallow\", \"2-Shallow\", \"1-Shallow\", \"1-Deep\", \"1-Deep\")) Acropora.sp <- c(0.1, 0.6, 0.4, 0.9, 0.2, 0.5) Gardineroseris.sp <- c(0.4, 0.9, 0.5, 0.23, 0.5, NA) Psammocora.sp <- c(0.9, 0.6, 0.5, 0.8, 0.1, 0.4) Leptastrea.sp <- c(0.5, 0.7, 0.4, 0.8, 0.2, NA) Notes <- c(NA, NA, \"saw octopus\", NA, \"white balance corrected\", NA) coral_cover <- data.frame(Sites, Transect, Acropora.sp, Gardineroseris.sp,                          Psammocora.sp, Leptastrea.sp, Notes)  #Removing Notes column keep_rm(data = coral_cover, values = c(\"Notes\") , select = \"col\",    keep = FALSE, drop_levels = FALSE, exact = TRUE) #>   Sites  Transect Acropora.sp Gardineroseris.sp Psammocora.sp Leptastrea.sp #> 1   One    1-Deep         0.1              0.40           0.9           0.5 #> 2   One 1-Shallow         0.6              0.90           0.6           0.7 #> 3   One 2-Shallow         0.4              0.50           0.5           0.4 #> 4   Two 1-Shallow         0.9              0.23           0.8           0.8 #> 5   Two    1-Deep         0.2              0.50           0.1           0.2 #> 6 Three    1-Deep         0.5                NA           0.4            NA  #Selecting site One and dropping extra levels Site_One <- keep_rm(data = coral_cover, values = c(\"One\") , select = \"row\",    keep = TRUE, drop_levels = TRUE, exact = TRUE, \"Sites\") levels(Site_One$Sites) #> [1] \"One\"  #Removing Deep sites Shallow_Sites <- keep_rm(data = coral_cover, values = c(\"-Shallow\") , select =\"row\",    keep = FALSE, drop_levels = TRUE, exact = FALSE, \"Transect\")  #Selecting only species data Species <- keep_rm(data = coral_cover, values = c(\".sp\") , select =\"col\",    keep = TRUE, drop_levels = TRUE, exact = FALSE)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/quadcleanR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"quadcleanR: Cleanup and Visualization of Quadrat Data — quadcleanR-package","title":"quadcleanR: Cleanup and Visualization of Quadrat Data — quadcleanR-package","text":"customizable tool clean ecological data collected quadrats.","code":""},{"path":[]},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/quadcleanR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"quadcleanR: Cleanup and Visualization of Quadrat Data — quadcleanR-package","text":"Maintainer: Dominique Maucieri dominiquemaucieri@gmail.com (ORCID)","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/rm_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove characters from data frame — rm_chr","title":"Remove characters from data frame — rm_chr","text":"Parts characters can removed based vector removal characters. characters present data frame removed. Selection area can include full data frame subset columns. working images, can helpful remove extra characters image IDs, anywhere else want remove specific characters data.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/rm_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove characters from data frame — rm_chr","text":"","code":"rm_chr(data, rm, full_selection = TRUE, cols)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/rm_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove characters from data frame — rm_chr","text":"data data frame. rm parts characters removed data frame. Can single element vector elements. full_selection full_selection = TRUE parts characters matching rm argument removed entire data frame. full_selection = FALSE specified columns parts characters matching rm argument removed. cols full_selection = FALSE argument specify columns characters matching rm argument removed.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/rm_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove characters from data frame — rm_chr","text":"data frame containing selected parts characters removed.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/rm_chr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove characters from data frame — rm_chr","text":"","code":"# creating data set Sites <- c(\"One.jpg\", \"Two.jpg\", \"Three.jpg\", \"Four.jpg\", \"Five.jpg\") Dominant_Coral <- c(\"Acropora.sp\", \"Leptastrea.spp\", \"Acropora.sp\",     \"Acropora.sp\", \"Acropora.sp\") Dominant_Cover <- c(0.1, 0.4, 0.9, 0.2, 0.5) Largest_Coral <- c(\"Acropora.sp\", \"Acropora.sp\", \"Psammocora.sp\",     \"Acropora.sp\",\"Gardineroseris.spp\")  coral_cover <- data.frame(Sites, Dominant_Coral, Dominant_Cover, Largest_Coral)  # removing a character from select columns coral_cover_nospp <- rm_chr(coral_cover, c(\".spp\"), full_selection = FALSE,     cols = c(\"Largest_Coral\", \"Dominant_Coral\"))  # removing multiple characters from all columns coral_cover_clean <- rm_chr(coral_cover, c(\".jpg\", \".spp\", \".sp\"))"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sample_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate sample sizes — sample_size","title":"Calculate sample sizes — sample_size","text":"Specify columns use produce table sample sizes. Helpful visualize number samples data.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sample_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate sample sizes — sample_size","text":"","code":"sample_size(data, dim_1, dim_2, count)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sample_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate sample sizes — sample_size","text":"data data frame want calculate sample sizes . dim_1 first dimension calculate sample sizes . resulting row names. must column name within data. dim_2 second dimension calculate sample sizes . resulting column names. must column name within data. count column name within data wish count length order calculate sample sizes.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sample_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate sample sizes — sample_size","text":"data frame sample sizes.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sample_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate sample sizes — sample_size","text":"","code":"Year <- c(\"2000\", \"2000\", \"2000\", \"2000\", \"2000\", \"2001\", \"2001\", \"2001\", \"2001\", \"2002\", \"2002\", \"2002\", \"2002\", \"2003\", \"2003\", \"2003\", \"2003\", \"2003\", \"2003\") Site <- c(\"site1\", \"site1\", \"site2\", \"site2\", \"site2\",\"site1\", \"site1\", \"site2\",           \"site2\", \"site1\", \"site1\", \"site2\", \"site2\",\"site1\", \"site1\", \"site2\",           \"site2\", \"site2\", \"site2\") Quadrat <- c(\"Q1\", \"Q2\", \"Q3\", \"Q4\", \"Q5\", \"Q6\", \"Q7\", \"Q8\", \"Q9\", \"Q10\", \"Q11\",              \"Q12\", \"Q13\", \"Q14\", \"Q15\", \"Q16\", \"Q17\", \"Q18\", \"Q19\") Cover <- sample(x = seq(from = 0, to = 1, by = 0.01), 19, replace = TRUE) coral_cover <- data.frame(Year, Site, Quadrat, Cover)  sample_size(coral_cover, dim_1 = \"Site\", dim_2 = \"Year\", count = \"Quadrat\") #>       2000 2001 2002 2003 #> site1    2    2    2    2 #> site2    3    2    2    4"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/simple_cleaned.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple cleaned quadrat data — simple_cleaned","title":"Simple cleaned quadrat data — simple_cleaned","text":"data_frame created Simple Cleaning Quadrat Data vignette. example data frame quadcleanR package can useful cleaning quadrat data.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/simple_cleaned.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple cleaned quadrat data — simple_cleaned","text":"","code":"simple_cleaned"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/simple_cleaned.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simple cleaned quadrat data — simple_cleaned","text":"data_frame 14 columns, : Field.Season Field season ID. TimeBlock sampling season , El Niño event. Site Site number. Quadrat Quadrat ID. HD_Cat Estimate local human disturbance site categorical variable. HD_Cont Estimate local human disturbance site continuous variable. NPP Max net primary productivity site (mg C m^-2 day^-1). sampling site sheltered windward side atoll. Region Region atoll. WaveEnergy Wave energy site (kW m^-1). Taxonomic_Name Taxonomic name substrate. functional_group Functional group substrate. life_history Life history classification substrate. prop_cover proportion cover substrate.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/softcoral_LQuads.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Quadrat Data (1m by 1m) — softcoral_LQuads","title":"Sample Quadrat Data (1m by 1m) — softcoral_LQuads","text":"data_frame can used cleaning vignette show quadrat data can cleaned produce easy analyze data frames. Data collected Baum Lab Kiritimati Field Teams. Data uncleaned version data found Maucieri Baum 2021. Biological Conservation. doi:10.1016/j.biocon.2021.109328  data photo quadrats (1m 1m) randomly annotated 100 random points . annotated points, substrate identified. Photo quadrats collected Kiritimati Island Republic Kiribati document coral cover time space. annotations output data_frame produced using CoralNet annotations done manually, trained researchers.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/softcoral_LQuads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Quadrat Data (1m by 1m) — softcoral_LQuads","text":"","code":"softcoral_LQuads"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/softcoral_LQuads.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Quadrat Data (1m by 1m) — softcoral_LQuads","text":"data_frame 135 columns, : Image.ID Photo quadrat image ID CoralNet. Image.name photo quadrat image name. Annotation.status quadrat completely annotated, annotations occur. Points total number annotation points quadrat. AcCor Percent total annotated points annotated Acropora (corymbose morphology). AcDig Percent total annotated points annotated Acropora (digitate morphology). Acr_arb Percent total annotated points annotated Acropora (arborescent morphology). Acrop Percent total annotated points annotated Acropora. AcroTab Percent total annotated points annotated Acropora (tabulate morphology). Astreo Percent total annotated points annotated Astreopora. B_Acr_arb Percent total annotated points annotated bleached Acropora (arborescent morphology) B_Acro Percent total annotated points annotated bleached Acropora. B_Astre Percent total annotated points annotated bleached Astreopora. BAT Percent total annotated points annotated bleached Acropora (tabulate morphology). B_Cosc Percent total annotated points annotated bleached Coscinarea. B_Echin Percent total annotated points annotated bleached Echinophyllia. B_FavHal Percent total annotated points annotated bleached Favites halicora. B_Favia Percent total annotated points annotated bleached_Favia. B_FaviaM Percent total annotated points annotated bleached Favia matthaii. B_FaviaS Percent total annotated points annotated bleached Favia speciosa. B_FaviaSt Percent total annotated points annotated bleached Goniastrea stelligera. B_Favites Percent total annotated points annotated bleached Favites. B_FavPent Percent total annotated points annotated bleached Favites pentagona. B_Fung Percent total annotated points annotated bleached Fungia. BGard Percent total annotated points annotated bleached Gardineroseris. B_GonEd Percent total annotated points annotated bleached Goniastrea edwardsi. B_Herpo Percent total annotated points annotated bleached Herpolitha. B_HYDNO Percent total annotated points annotated bleached Hydnophora. B_HyExe Percent total annotated points annotated bleached Hydnophora exesa. BlAcro-Cor Percent total annotated points annotated bleached Acropora (corymbose morphology). B_Lepta Percent total annotated points annotated bleached Leptastrea. B_Lepto Percent total annotated points annotated bleached Leptoseris. Blisop Percent total annotated points annotated bleached Isopora. B_Lobo Percent total annotated points annotated bleached Lobophyllia. BlTurbFol Percent total annotated points annotated bleached Turbinaria (foliose morphology). B_MOEN Percent total annotated points annotated bleached Montipora (encrusting morphology). B_MOFO Percent total annotated points annotated bleached Montipora (foliose morphology). B_Monta Percent total annotated points annotated bleached Montastraea. B_Monti Percent total annotated points annotated bleached Montipora. B_Oxyp Percent total annotated points annotated bleached Oxypora. B_Paly Percent total annotated points annotated bleached Palythoa. B_PaveDUER Percent total annotated points annotated bleached Pavona duerdeni. B_Pavona Percent total annotated points annotated bleached Pavona. B_PEYDO Percent total annotated points annotated bleached Pocillopora eydouxi. B_Plat Percent total annotated points annotated bleached Platygyra. B_PMEAN Percent total annotated points annotated bleached Pocillopora meandrina. B_Pocillo Percent total annotated points annotated bleached Pocillopora. B_Porit Percent total annotated points annotated bleached Porites. B_Psam Percent total annotated points annotated bleached Psammocora. B_PVAR Percent total annotated points annotated bleached Pavona varians. B_Sando Percent total annotated points annotated bleached Sandolitha. B_UnkCoral Percent total annotated points annotated bleached unknown hard coral. Cirr Percent total annotated points annotated Cirrhipathes. COSC Percent total annotated points annotated Coscinaraea. ECHIN Percent total annotated points annotated Echinophyllia. Fav Percent total annotated points annotated Favites. FavHal Percent total annotated points annotated Favites halicora. Favites halicora Percent total annotated points annotated Favia. FaviaM Percent total annotated points annotated Dipsastraea matthaii. FaviaS Percent total annotated points annotated Favia speciosa. FaviaSt Percent total annotated points annotated Favia stelligera. FavPent Percent total annotated points annotated Favites pentagona. Fung Percent total annotated points annotated Fungia. Gardin Percent total annotated points annotated Gardineroseris. GonEd Percent total annotated points annotated Goniastrea edwardsi. Herpo Percent total annotated points annotated Herpolitha. HYDNO Percent total annotated points annotated Hydnophora. HyExe Percent total annotated points annotated Hydnophora exesa. Isopora Percent total annotated points annotated Isopora. Lepta Percent total annotated points annotated Leptastrea. Lepto Percent total annotated points annotated Leptoseris. Lobo Percent total annotated points annotated Lobophyllia. *MOEN Percent total annotated points annotated Montipora (encrusting morphology). *MOFO Percent total annotated points annotated Montipora (foliose morphology). Monta Percent total annotated points annotated Montastraea. Monti Percent total annotated points annotated Montipora. Oxyp Percent total annotated points annotated Oxypora. Paly Percent total annotated points annotated Palythoa. PaveDUER Percent total annotated points annotated Pavona duerdeni. Pavon Percent total annotated points annotated Pavona. PEYDO Percent total annotated points annotated Pocillopora eydouxi. Plat Percent total annotated points annotated Platygyra. Plero Percent total annotated points annotated Plerogyra. PMEAN Percent total annotated points annotated Pocillopora meandrina. Pocill Percent total annotated points annotated Pocillopora. Porit Percent total annotated points annotated Porites. Psam Percent total annotated points annotated Psammocora. PVAR Percent total annotated points annotated Pavona varians. Sando Percent total annotated points annotated Sandolitha. Tuba Percent total annotated points annotated Tubastrea. TURB Percent total annotated points annotated Turbinaria. UnkCoral Percent total annotated points annotated unknown hard coral. ANEM Percent total annotated points annotated sea anemone. B_Clad Percent total annotated points annotated bleached Cladiella. B_Sinu Percent total annotated points annotated bleached Sinularia. Clad Percent total annotated points annotated Cladiella. EncBry Percent total annotated points annotated encrusting Bryozoan. EUR Percent total annotated points annotated sea urchin. HYDCO Percent total annotated points annotated Hydrocoral. Hydra Percent total annotated points annotated Hydroid. Mille Percent total annotated points annotated Millepora. MOBI Percent total annotated points annotated bivalves. Sarco Percent total annotated points annotated Sarcophyton. SECO Percent total annotated points annotated sea cucumber. Sinu Percent total annotated points annotated Sinularia. Sponge Percent total annotated points annotated sponge. Stylas Percent total annotated points annotated Stylaster. UnkTUN Percent total annotated points annotated unknown Tunicate. XmasW Percent total annotated points annotated Christmas Tree Worm. ZOAN Percent total annotated points annotated Zoanthid. B_Sarco Percent total annotated points annotated bleached Sarcophyton. Sand Percent total annotated points annotated sand. Sediment Percent total annotated points annotated sediment. SCRO Percent total annotated points annotated consolidated rock. B_Loph Percent total annotated points annotated bleached Lobophytum. CYAN Percent total annotated points annotated Cyanobacteria films. Loph Percent total annotated points annotated Lobophytum. Rubble Percent total annotated points annotated broken coral rubble. SHAD Percent total annotated points annotated shadow. Trans Percent total annotated points annotated transect hardware. Unc Percent total annotated points annotated unclear. AVRA Percent total annotated points annotated Avrainvillea. Caul Percent total annotated points annotated Caulerpa. CCA Percent total annotated points annotated crustose coraline algae. Dict Percent total annotated points annotated Dictyota. DICTY Percent total annotated points annotated Dictyosphaeria. Hali Percent total annotated points annotated Halimeda. Lobph Percent total annotated points annotated Lobophora. Macro Percent total annotated points annotated macroalgae. Mdict Percent total annotated points annotated Microdictyon. Pad Percent total annotated points annotated Padina. Peysson Percent total annotated points annotated Peyssonnelia. Turf Percent total annotated points annotated turf algae. TURFH Percent total annotated points annotated turf algae hard substrate. Unidentified Percent total annotated points annotated unidentified.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/softcoral_SQuads.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Quadrat Data (0.6m by 0.9m) — softcoral_SQuads","title":"Sample Quadrat Data (0.6m by 0.9m) — softcoral_SQuads","text":"data_frame can used Simple Cleaning Quadrat Data Cleaning Cropping Quadrat Data vignettes show quadrat data can cleaned produce easy analyze data frames. Data collected Baum Lab Kiritimati Field Teams. Data uncleaned version data found Maucieri Baum 2021. Biological Conservation. doi:10.1016/j.biocon.2021.109328  data photo quadrats (0.9m 0.6m) randomly annotated 54 random points . annotated points, substrate identified. Photo quadrats collected Kiritimati Island Republic Kiribati document coral cover time space. annotations output data_frame produced using CoralNet annotations done manually, trained researchers.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/softcoral_SQuads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Quadrat Data (0.6m by 0.9m) — softcoral_SQuads","text":"","code":"softcoral_SQuads"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/softcoral_SQuads.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Quadrat Data (0.6m by 0.9m) — softcoral_SQuads","text":"data_frame 135 columns, : Image.ID Photo quadrat image ID CoralNet. Image.name photo quadrat image name. Annotation.status quadrat completely annotated, annotations occur. Points total number annotation points quadrat. AcCor Percent total annotated points annotated Acropora (corymbose morphology). AcDig Percent total annotated points annotated Acropora (digitate morphology). Acr_arb Percent total annotated points annotated Acropora (arborescent morphology). Acrop Percent total annotated points annotated Acropora. AcroTab Percent total annotated points annotated Acropora (tabulate morphology). Astreo Percent total annotated points annotated Astreopora. B_Acr_arb Percent total annotated points annotated bleached Acropora (arborescent morphology). B_Acro Percent total annotated points annotated bleached Acropora. B_Astre Percent total annotated points annotated bleached Astreopora. BAT Percent total annotated points annotated bleached Acropora (tabulate morphology). B_Cosc Percent total annotated points annotated bleached Coscinarea. B_Echin Percent total annotated points annotated bleached Echinophyllia. B_FavHal Percent total annotated points annotated bleached Favites halicora. B_Favia Percent total annotated points annotated bleached_Favia. B_FaviaM Percent total annotated points annotated bleached Favia matthaii. B_FaviaS Percent total annotated points annotated bleached Favia speciosa. B_FaviaSt Percent total annotated points annotated bleached Goniastrea stelligera. B_Favites Percent total annotated points annotated bleached Favites. B_FavPent Percent total annotated points annotated bleached Favites pentagona. B_Fung Percent total annotated points annotated bleached Fungia. BGard Percent total annotated points annotated bleached Gardineroseris. B_GonEd Percent total annotated points annotated bleached Goniastrea edwardsi. B_Herpo Percent total annotated points annotated bleached Herpolitha. B_HYDNO Percent total annotated points annotated bleached Hydnophora. B_HyExe Percent total annotated points annotated bleached Hydnophora exesa. BlAcro-Cor Percent total annotated points annotated bleached Acropora (corymbose morphology). B_Lepta Percent total annotated points annotated bleached Leptastrea. B_Lepto Percent total annotated points annotated bleached Leptoseris. Blisop Percent total annotated points annotated bleached Isopora. B_Lobo Percent total annotated points annotated bleached Lobophyllia. BlTurbFol Percent total annotated points annotated bleached Turbinaria (foliose morphology). B_MOEN Percent total annotated points annotated bleached Montipora (encrusting morphology). B_MOFO Percent total annotated points annotated bleached Montipora (foliose morphology). B_Monta Percent total annotated points annotated bleached Montastraea. B_Monti Percent total annotated points annotated bleached Montipora. B_Oxyp Percent total annotated points annotated bleached Oxypora. B_Paly Percent total annotated points annotated bleached Palythoa. B_PaveDUER Percent total annotated points annotated bleached Pavona duerdeni. B_Pavona Percent total annotated points annotated bleached Pavona. B_PEYDO Percent total annotated points annotated bleached Pocillopora eydouxi. B_Plat Percent total annotated points annotated bleached Platygyra. B_PMEAN Percent total annotated points annotated bleached Pocillopora meandrina. B_Pocillo Percent total annotated points annotated bleached Pocillopora. B_Porit Percent total annotated points annotated bleached Porites. B_Psam Percent total annotated points annotated bleached Psammocora. B_PVAR Percent total annotated points annotated bleached Pavona varians. B_Sando Percent total annotated points annotated bleached Sandolitha. B_UnkCoral Percent total annotated points annotated bleached unknown hard coral. Cirr Percent total annotated points annotated Cirrhipathes. COSC Percent total annotated points annotated Coscinaraea. ECHIN Percent total annotated points annotated Echinophyllia. Fav Percent total annotated points annotated Favites. FavHal Percent total annotated points annotated Favites halicora. Favites halicora Percent total annotated points annotated Favia. FaviaM Percent total annotated points annotated Dipsastraea matthaii. FaviaS Percent total annotated points annotated Favia speciosa. FaviaSt Percent total annotated points annotated Favia stelligera. FavPent Percent total annotated points annotated Favites pentagona. Fung Percent total annotated points annotated Fungia. Gardin Percent total annotated points annotated Gardineroseris. GonEd Percent total annotated points annotated Goniastrea edwardsi. Herpo Percent total annotated points annotated Herpolitha. HYDNO Percent total annotated points annotated Hydnophora. HyExe Percent total annotated points annotated Hydnophora exesa. Isopora Percent total annotated points annotated Isopora. Lepta Percent total annotated points annotated Leptastrea. Lepto Percent total annotated points annotated Leptoseris. Lobo Percent total annotated points annotated Lobophyllia. *MOEN Percent total annotated points annotated Montipora (encrusting morphology). *MOFO Percent total annotated points annotated Montipora (foliose morphology). Monta Percent total annotated points annotated Montastraea. Monti Percent total annotated points annotated Montipora. Oxyp Percent total annotated points annotated Oxypora. Paly Percent total annotated points annotated Palythoa. PaveDUER Percent total annotated points annotated Pavona duerdeni. Pavon Percent total annotated points annotated Pavona. PEYDO Percent total annotated points annotated Pocillopora eydouxi. Plat Percent total annotated points annotated Platygyra. Plero Percent total annotated points annotated Plerogyra. PMEAN Percent total annotated points annotated Pocillopora meandrina. Pocill Percent total annotated points annotated Pocillopora. Porit Percent total annotated points annotated Porites. Psam Percent total annotated points annotated Psammocora. PVAR Percent total annotated points annotated Pavona varians. Sando Percent total annotated points annotated Sandolitha. Tuba Percent total annotated points annotated Tubastrea. TURB Percent total annotated points annotated Turbinaria. UnkCoral Percent total annotated points annotated unknown hard coral. ANEM Percent total annotated points annotated sea anemone. B_Clad Percent total annotated points annotated bleached Cladiella. B_Sinu Percent total annotated points annotated bleached Sinularia. Clad Percent total annotated points annotated Cladiella. EncBry Percent total annotated points annotated encrusting Bryozoan. EUR Percent total annotated points annotated sea urchin. HYDCO Percent total annotated points annotated Hydrocoral. Hydra Percent total annotated points annotated Hydroid. Mille Percent total annotated points annotated Millepora. MOBI Percent total annotated points annotated bivalves. Sarco Percent total annotated points annotated Sarcophyton. SECO Percent total annotated points annotated sea cucumber. Sinu Percent total annotated points annotated Sinularia. Sponge Percent total annotated points annotated sponge. Stylas Percent total annotated points annotated Stylaster. UnkTUN Percent total annotated points annotated unknown Tunicate. XmasW Percent total annotated points annotated Christmas Tree Worm. ZOAN Percent total annotated points annotated Zoanthid. B_Sarco Percent total annotated points annotated bleached Sarcophyton. Sand Percent total annotated points annotated sand. Sediment Percent total annotated points annotated sediment. SCRO Percent total annotated points annotated consolidated rock. B_Loph Percent total annotated points annotated bleached Lobophytum. CYAN Percent total annotated points annotated Cyanobacteria films. Loph Percent total annotated points annotated Lobophytum. Rubble Percent total annotated points annotated broken coral rubble. SHAD Percent total annotated points annotated shadow. Trans Percent total annotated points annotated transect hardware. Unc Percent total annotated points annotated unclear. AVRA Percent total annotated points annotated Avrainvillea. Caul Percent total annotated points annotated Caulerpa. CCA Percent total annotated points annotated crustose coraline algae. Dict Percent total annotated points annotated Dictyota. DICTY Percent total annotated points annotated Dictyosphaeria. Hali Percent total annotated points annotated Halimeda. Lobph Percent total annotated points annotated Lobophora. Macro Percent total annotated points annotated macroalgae. Mdict Percent total annotated points annotated Microdictyon. Pad Percent total annotated points annotated Padina. Peysson Percent total annotated points annotated Peyssonnelia. Turf Percent total annotated points annotated turf algae. TURFH Percent total annotated points annotated turf algae hard substrate. Unidentified Percent total annotated points annotated unidentified.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/softcoral_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Annotation Data for Cropping Vignette — softcoral_annotations","title":"Sample Annotation Data for Cropping Vignette — softcoral_annotations","text":"data_frame can used Crop Quadrats Area vignette show quadrat data can cropped maintaining spatial relationships observations. Data collected Baum Lab Kiritimati Field Teams. Data uncleaned version data found Maucieri Baum 2021. Biological Conservation. doi:10.1016/j.biocon.2021.109328  data photo quadrats (1m 1m) randomly annotated 100 random points . annotated points, substrate identified. Photo quadrats collected Kiritimati Island Republic Kiribati document coral cover time space. annotations output data_frame produced using CoralNet annotations done manually, trained researchers.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/softcoral_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Annotation Data for Cropping Vignette — softcoral_annotations","text":"","code":"softcoral_annotations"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/softcoral_annotations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Annotation Data for Cropping Vignette — softcoral_annotations","text":"data_frame 4 columns, : Name Unique identification code quadrat. Row pixel row annotation occurred photo quadrat. Column pixel column annotation occurred photo quadrat. Label identification substrate annotation location.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sum_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum columns based on matching names — sum_cols","title":"Sum columns based on matching names — sum_cols","text":"Select columns attach vector new names, columns matching names row summed. helpful simplify data quickly, like simplifying higher taxonomic group.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sum_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum columns based on matching names — sum_cols","text":"","code":"sum_cols(data, from, to)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sum_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum columns based on matching names — sum_cols","text":"data data frame. column names data. vector new names, matching names columns row summed.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sum_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum columns based on matching names — sum_cols","text":"data frame summed columns.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/sum_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum columns based on matching names — sum_cols","text":"","code":"Sites <- as.factor(c(\"One\", \"One\", \"One\", \"Two\", \"Two\", \"Three\")) Transect <- as.factor(c(\"1-Deep\", \"1-Shallow\", \"2-Shallow\", \"1-Shallow\", \"1-Deep\", \"1-Deep\")) Acropora.tabulate <- c(0.1, 0.6, 0.4, 0.9, 0.2, 0) Acropora.corymbose <- c(0.4, 0, 0.1, 0, 0.3, 0.5) Gardineroseris.sp <- c(0.4, 0.9, 0.5, 0.23, 0.5, 0.6) Psammocora.sp <- c(0.9, 0.6, 0.5, 0.8, 0.1, 0.4) Leptastrea.sp <- c(0.5, 0.7, 0.4, 0.8, 0.2, 0.3) coral_cover <- data.frame(Sites, Transect, Acropora.tabulate, Acropora.corymbose,                           Gardineroseris.sp, Psammocora.sp, Leptastrea.sp)  new_names <- c(\"Acropora.spp\", \"Acropora.spp\", \"Gardineroseris.sp\",                \"Psammocora.sp\", \"Leptastrea.sp\")  sum_cols(data = coral_cover, from = colnames(coral_cover[,3:7]),          to = new_names) #>   Sites  Transect Acropora.spp Gardineroseris.sp Psammocora.sp Leptastrea.sp #> 1   One    1-Deep          0.5              0.40           0.9           0.5 #> 2   One 1-Shallow          0.6              0.90           0.6           0.7 #> 3   One 2-Shallow          0.5              0.50           0.5           0.4 #> 4   Two 1-Shallow          0.9              0.23           0.8           0.8 #> 5   Two    1-Deep          0.5              0.50           0.1           0.2 #> 6 Three    1-Deep          0.5              0.60           0.4           0.3"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/usable_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract usable observations — usable_obs","title":"Extract usable observations — usable_obs","text":"Sum columns containing unusable observations remove rows contain specified cutoff number unusable points. Helpful annotations unidentifiable want remove total usable observations, can remove quadrats many unusable observations.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/usable_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract usable observations — usable_obs","text":"","code":"usable_obs(   data,   unusable,   max = FALSE,   cutoff,   print_max = FALSE,   rm_unusable = TRUE )"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/usable_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract usable observations — usable_obs","text":"data data frame row representing sampling unit (ex. quadrat photo). unusable vector column names containing unusable observations. max max = FALSE, threshold examined. max = TRUE, threshold cutoff needs provided rows containing cutoff removed data frame. cutoff threshold number rows containing unusable observations cutoff removed data frame. print_max print_max = TRUE, data frame returned rows containing unusable observations cutoff. print_max = FALSE data frame returned rows containing equal less unusable observations cutoff. rm_unusable rm_unusable = TRUE, columns named unusable vector removed data frame. columns removed rm_unusable = FALSE, though duplicate data remain.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/usable_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract usable observations — usable_obs","text":"data frame containing summed unusable points.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/usable_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract usable observations — usable_obs","text":"","code":"#create data set for example Sites <- as.factor(c(\"One\", \"One\", \"Two\", \"Two\", \"Three\", \"Three\")) Transect <- as.factor(c(\"1-Shallow\", \"2-Shallow\", \"1-Shallow\", \"2-Shallow\",     \"1-Shallow\", \"2-Shallow\")) Acropora.sp <- c(1, 2, 3, 4, 5, 6) Gardineroseris.sp <- c(6, 1, 2, 3, 4, 5) Psammocora.sp <- c(5, 6, 1, 2, 3, 4) Leptastrea.sp <- c(4, 5, 6, 1, 2, 3) Blurry <- c(3, 4, 5, 6, 1, 2) Unk <- c(2, 3, 4, 5, 6, 1) coral_cover <- data.frame(Sites, Transect, Acropora.sp, Gardineroseris.sp,                           Psammocora.sp, Leptastrea.sp, Blurry, Unk)   usable_obs(coral_cover, c(\"Blurry\", \"Unk\")) #>   Sites  Transect Acropora.sp Gardineroseris.sp Psammocora.sp Leptastrea.sp #> 1   One 1-Shallow           1                 6             5             4 #> 2   One 2-Shallow           2                 1             6             5 #> 3   Two 1-Shallow           3                 2             1             6 #> 4   Two 2-Shallow           4                 3             2             1 #> 5 Three 1-Shallow           5                 4             3             2 #> 6 Three 2-Shallow           6                 5             4             3 #>   unusable #> 1        5 #> 2        7 #> 3        9 #> 4       11 #> 5        7 #> 6        3  usable_obs(coral_cover, c(\"Blurry\", \"Unk\"), print_max = TRUE) #> Warning: no max specified #>   Sites  Transect Acropora.sp Gardineroseris.sp Psammocora.sp Leptastrea.sp #> 1   One 1-Shallow           1                 6             5             4 #> 2   One 2-Shallow           2                 1             6             5 #> 3   Two 1-Shallow           3                 2             1             6 #> 4   Two 2-Shallow           4                 3             2             1 #> 5 Three 1-Shallow           5                 4             3             2 #> 6 Three 2-Shallow           6                 5             4             3 #>   unusable #> 1        5 #> 2        7 #> 3        9 #> 4       11 #> 5        7 #> 6        3  usable_obs(coral_cover, c(\"Blurry\", \"Unk\"), rm_unusable = FALSE) #> Warning: duplication exists in the data frame #>   Sites  Transect Acropora.sp Gardineroseris.sp Psammocora.sp Leptastrea.sp #> 1   One 1-Shallow           1                 6             5             4 #> 2   One 2-Shallow           2                 1             6             5 #> 3   Two 1-Shallow           3                 2             1             6 #> 4   Two 2-Shallow           4                 3             2             1 #> 5 Three 1-Shallow           5                 4             3             2 #> 6 Three 2-Shallow           6                 5             4             3 #>   Blurry Unk unusable #> 1      3   2        5 #> 2      4   3        7 #> 3      5   4        9 #> 4      6   5       11 #> 5      1   6        7 #> 6      2   1        3  usable_obs(coral_cover, c(\"Blurry\", \"Unk\"), max = TRUE, cutoff = 8) #>   Sites  Transect Acropora.sp Gardineroseris.sp Psammocora.sp Leptastrea.sp #> 1   One 1-Shallow           1                 6             5             4 #> 2   One 2-Shallow           2                 1             6             5 #> 3 Three 1-Shallow           5                 4             3             2 #> 4 Three 2-Shallow           6                 5             4             3 #>   unusable #> 1        5 #> 2        7 #> 3        7 #> 4        3  usable_obs(coral_cover, c(\"Blurry\", \"Unk\"), max = TRUE, cutoff = 8, print_max = TRUE) #>   Sites  Transect Acropora.sp Gardineroseris.sp Psammocora.sp Leptastrea.sp #> 1   Two 1-Shallow           3                 2             1             6 #> 2   Two 2-Shallow           4                 3             2             1 #>   unusable #> 1        9 #> 2       11"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/visualize_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize cleaned data — visualize_app","title":"Visualize cleaned data — visualize_app","text":"Using interactive shiny app, visualize explore cleaned quadrat data.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/visualize_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize cleaned data — visualize_app","text":"","code":"visualize_app(data, xaxis, yaxis)"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/visualize_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize cleaned data — visualize_app","text":"data data frame containing cleaned quadrat data. xaxis xaxis variable column names found data. yaxis yaxis variable column names found data.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/visualize_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize cleaned data — visualize_app","text":"shiny app launched browser.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/reference/visualize_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize cleaned data — visualize_app","text":"","code":"year <- sample(x = seq(from = 2000, to = 2020, by = 1), 1000, replace = TRUE) site <- sample(x = c(\"site1\", \"site2\", \"site3\", \"site4\", \"site5\"), 1000, replace = TRUE) transect <- sample(x = c(\"transect1\", \"transect2\", \"transect3\", \"transect4\"),     1000, replace = TRUE) species <- sample(x = c(\"Acropora\", \"Gardineroseris\", \"Psammocora\", \"Leptastrea\"),     1000, replace = TRUE) cover <- sample(x = seq(from = 0, to = 1, by = 0.01), 1000, replace = TRUE)  coral <- data.frame(year, site, transect, species, cover)  if (interactive()) { visualize_app(data = coral, xaxis = colnames(coral[,1:4]), yaxis = \"cover\") }"},{"path":"https://dominiquemaucieri.github.io/quadcleanR/news/index.html","id":"quadcleanr-100","dir":"Changelog","previous_headings":"","what":"quadcleanR 1.0.0","title":"quadcleanR 1.0.0","text":"First public release.","code":""},{"path":"https://dominiquemaucieri.github.io/quadcleanR/news/index.html","id":"quadcleanr-0009000","dir":"Changelog","previous_headings":"","what":"quadcleanR 0.0.0.9000","title":"quadcleanR 0.0.0.9000","text":"Initial Package development.","code":""}]
